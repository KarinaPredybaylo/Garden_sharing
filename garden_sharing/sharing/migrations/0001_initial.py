# Generated by Django 4.1.3 on 2022-11-05 06:46

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarePlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lighting', models.CharField(max_length=20)),
                ('watering', models.CharField(max_length=20)),
                ('transplant', models.CharField(max_length=40)),
                ('temperature', models.CharField(max_length=20)),
                ('growing_difficulty', models.CharField(choices=[('Low', 'requires constant monitoring'), ('Medium', 'requires care 1 time in 1-2 weeks'), ('High', 'requires care 1 time in 2-3 weeks')], default='requires constant monitoring', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('thing_amount', models.IntegerField(default=0)),
                ('city', models.CharField(default='Minsk', max_length=20)),
                ('address', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'permissions': (('request_manage', 'Can view and process users requests'),),
            },
        ),
        migrations.CreateModel(
            name='RequestThing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('amount', models.IntegerField()),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Shipped', 'Shipped'), ('Booked', 'Booked')], default='Requested', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('plants_amount', models.IntegerField(default=0, null=True)),
                ('thing_amount', models.IntegerField(default=0, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'permissions': (('share_manage', 'Can view and process users shares'),),
            },
        ),
        migrations.CreateModel(
            name='ShareThing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('amount', models.IntegerField()),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('ready_for_save', models.BooleanField(choices=[(0, 'Not ready '), (1, 'Ready')], default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypePlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('category', models.CharField(choices=[('Tree/Bush', 'Tree/Bush'), ('Flower', 'Flower')], default='Tree/Bush', max_length=10)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(blank=True, upload_to='videos_uploaded', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(default='Minsk', max_length=20)),
                ('lat', models.FloatField(db_column='latitude')),
                ('long', models.FloatField(db_column='longitude')),
                ('thing_count', models.IntegerField(default=0, null=True)),
                ('capacity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('sharething_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sharing.sharething')),
                ('common_details', models.CharField(max_length=200)),
                ('photo', models.ImageField(blank=True, upload_to='images')),
                ('fruit', models.CharField(choices=[('Fruit', 'Fruit'), ('Not Fruit', 'Not Fruit')], default='Not Fruit', max_length=20)),
                ('place_of_growth', models.CharField(choices=[('Garden', 'Garden'), ('Room', 'Room'), ('Garden and room', 'Garden and room')], default='Garden', max_length=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('sharing.sharething',),
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('sharething_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sharing.sharething')),
                ('common_details', models.CharField(max_length=200)),
                ('photo', models.ImageField(null=True, upload_to='images')),
            ],
            options={
                'abstract': False,
            },
            bases=('sharing.sharething',),
        ),
        migrations.AddConstraint(
            model_name='warehouse',
            constraint=models.CheckConstraint(check=models.Q(('thing_count__lte', models.F('capacity'))), name='thing_count_lte'),
        ),
        migrations.AddField(
            model_name='sharething',
            name='share_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sharing.share'),
        ),
        migrations.AddField(
            model_name='sharething',
            name='warehouse_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sharing.warehouse'),
        ),
        migrations.AddField(
            model_name='share',
            name='user',
            field=models.ForeignKey(default=19, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='requestthing',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharing.request'),
        ),
        migrations.AddField(
            model_name='requestthing',
            name='warehouse_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sharing.warehouse'),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(default=19, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='video',
            name='plant',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sharing.plant'),
        ),
        migrations.AddField(
            model_name='plant',
            name='type_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sharing.typeplant'),
        ),
        migrations.AddField(
            model_name='careplant',
            name='plant',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sharing.plant'),
        ),
    ]
